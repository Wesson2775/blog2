generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Post {
  id         String   @id @default(cuid())
  title      String
  slug       String   @unique
  content    String
  excerpt    String?
  coverImage String?
  published  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  tags       Tag[]    @relation("PostToTag")
}

model Note {
  id        String   @id @default(cuid())
  content   String
  slug      String   @unique
  published Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  pinned    Boolean  @default(false)
}

model Tag {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  published Boolean  @default(false)
  posts     Post[]   @relation("PostToTag")
}

model Music {
  id        String   @id @default(cuid())
  title     String
  artist    String?
  cover     String?
  src       String
  createdAt DateTime @default(now())
  published Boolean  @default(false)
}

model SiteConfig {
  id          String   @id @default(cuid())
  title       String
  description String
  updatedAt   DateTime @updatedAt
  createdAt   DateTime @default(now())
  email       String
  github      String
  subtitle    String
}

model Site {
  id       String @id @default(cuid())
  title    String
  subtitle String
  avatar   String
  bio      String
}

model Link {
  id          String   @id @default(cuid())
  name        String
  url         String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  published   Boolean  @default(false)
}
